var _user$project$Main$tabTitles = {
	ctor: '::',
	_0: _elm_lang$html$Html$text('Register'),
	_1: {
		ctor: '::',
		_0: _elm_lang$html$Html$text('Login'),
		_1: {ctor: '[]'}
	}
};
var _user$project$Main$model = {count: 0, selectedTab: 0, register_password: '', register_passwordAgain: '', mdl: _debois$elm_mdl$Material$model};
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {count: a, selectedTab: b, register_password: c, register_passwordAgain: d, mdl: e};
	});
var _user$project$Main$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'SelectTab':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{selectedTab: _p0._0}),
					{ctor: '[]'});
			case 'Update_register_password':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{register_password: _p0._0}),
					{ctor: '[]'});
			case 'Update_register_passwordAgain':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{register_passwordAgain: _p0._0}),
					{ctor: '[]'});
			case 'SubmitRegisterForm':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{ctor: '[]'});
			case 'SubmitLoginForm':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					{ctor: '[]'});
			default:
				return A3(_debois$elm_mdl$Material$update, _user$project$Main$Mdl, _p0._0, model);
		}
	});
var _user$project$Main$SubmitLoginForm = {ctor: 'SubmitLoginForm'};
var _user$project$Main$loginForm = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A5(
				_debois$elm_mdl$Material_Textfield$render,
				_user$project$Main$Mdl,
				{
					ctor: '::',
					_0: 0,
					_1: {ctor: '[]'}
				},
				model.mdl,
				{
					ctor: '::',
					_0: _debois$elm_mdl$Material_Textfield$label('Username'),
					_1: {
						ctor: '::',
						_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$text_,
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A5(
					_debois$elm_mdl$Material_Textfield$render,
					_user$project$Main$Mdl,
					{
						ctor: '::',
						_0: 1,
						_1: {ctor: '[]'}
					},
					model.mdl,
					{
						ctor: '::',
						_0: _debois$elm_mdl$Material_Textfield$label('Password'),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$password,
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A5(
						_debois$elm_mdl$Material_Button$render,
						_user$project$Main$Mdl,
						{
							ctor: '::',
							_0: 2,
							_1: {ctor: '[]'}
						},
						model.mdl,
						{
							ctor: '::',
							_0: _debois$elm_mdl$Material_Button$raised,
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Button$colored,
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Button$ripple,
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Options$onClick(_user$project$Main$SubmitLoginForm),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Login'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$SubmitRegisterForm = {ctor: 'SubmitRegisterForm'};
var _user$project$Main$Update_register_passwordAgain = function (a) {
	return {ctor: 'Update_register_passwordAgain', _0: a};
};
var _user$project$Main$Update_register_password = function (a) {
	return {ctor: 'Update_register_password', _0: a};
};
var _user$project$Main$registerForm = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A5(
				_debois$elm_mdl$Material_Textfield$render,
				_user$project$Main$Mdl,
				{
					ctor: '::',
					_0: 0,
					_1: {ctor: '[]'}
				},
				model.mdl,
				{
					ctor: '::',
					_0: _debois$elm_mdl$Material_Textfield$label('Username'),
					_1: {
						ctor: '::',
						_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$text_,
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A5(
					_debois$elm_mdl$Material_Textfield$render,
					_user$project$Main$Mdl,
					{
						ctor: '::',
						_0: 1,
						_1: {ctor: '[]'}
					},
					model.mdl,
					{
						ctor: '::',
						_0: _debois$elm_mdl$Material_Textfield$label('Password'),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$password,
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Options$onInput(_user$project$Main$Update_register_password),
									_1: {
										ctor: '::',
										_0: A2(
											_debois$elm_mdl$Material_Options$when,
											!_elm_lang$core$Native_Utils.eq(model.register_password, model.register_passwordAgain),
											_debois$elm_mdl$Material_Textfield$error('Passwords don\'t match.')),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A5(
						_debois$elm_mdl$Material_Textfield$render,
						_user$project$Main$Mdl,
						{
							ctor: '::',
							_0: 2,
							_1: {ctor: '[]'}
						},
						model.mdl,
						{
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$label('Confirm password'),
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Textfield$password,
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Options$onInput(_user$project$Main$Update_register_passwordAgain),
										_1: {
											ctor: '::',
											_0: A2(
												_debois$elm_mdl$Material_Options$when,
												!_elm_lang$core$Native_Utils.eq(model.register_password, model.register_passwordAgain),
												_debois$elm_mdl$Material_Textfield$error('Passwords don\'t match.')),
											_1: {ctor: '[]'}
										}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A5(
							_debois$elm_mdl$Material_Textfield$render,
							_user$project$Main$Mdl,
							{
								ctor: '::',
								_0: 3,
								_1: {ctor: '[]'}
							},
							model.mdl,
							{
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$label('Email'),
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Textfield$email,
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A5(
								_debois$elm_mdl$Material_Button$render,
								_user$project$Main$Mdl,
								{
									ctor: '::',
									_0: 4,
									_1: {ctor: '[]'}
								},
								model.mdl,
								{
									ctor: '::',
									_0: _debois$elm_mdl$Material_Button$raised,
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Button$colored,
										_1: {
											ctor: '::',
											_0: _debois$elm_mdl$Material_Button$ripple,
											_1: {
												ctor: '::',
												_0: _debois$elm_mdl$Material_Options$onClick(_user$project$Main$SubmitRegisterForm),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Register'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Main$viewBody = function (model) {
	var _p1 = model.selectedTab;
	switch (_p1) {
		case 0:
			return _user$project$Main$registerForm(model);
		case 1:
			return _user$project$Main$loginForm(model);
		default:
			return _elm_lang$html$Html$text('404');
	}
};
var _user$project$Main$SelectTab = function (a) {
	return {ctor: 'SelectTab', _0: a};
};
var _user$project$Main$view = function (model) {
	return A4(
		_debois$elm_mdl$Material_Layout$render,
		_user$project$Main$Mdl,
		model.mdl,
		{
			ctor: '::',
			_0: _debois$elm_mdl$Material_Layout$fixedHeader,
			_1: {
				ctor: '::',
				_0: _debois$elm_mdl$Material_Layout$onSelectTab(_user$project$Main$SelectTab),
				_1: {
					ctor: '::',
					_0: _debois$elm_mdl$Material_Layout$selectedTab(model.selectedTab),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			header: {
				ctor: '::',
				_0: _elm_lang$html$Html$text('LearnMath'),
				_1: {ctor: '[]'}
			},
			drawer: {
				ctor: '::',
				_0: _elm_lang$html$Html$text('drawer text'),
				_1: {ctor: '[]'}
			},
			tabs: {
				ctor: '_Tuple2',
				_0: _user$project$Main$tabTitles,
				_1: {ctor: '[]'}
			},
			main: {
				ctor: '::',
				_0: _user$project$Main$viewBody(model),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				_user$project$Main$model,
				{
					mdl: A2(_debois$elm_mdl$Material_Layout$setTabsWidth, 1384, _user$project$Main$model.mdl)
				}),
			_1: _debois$elm_mdl$Material_Layout$sub0(_user$project$Main$Mdl)
		},
		view: _user$project$Main$view,
		subscriptions: function (_p2) {
			return A2(
				_debois$elm_mdl$Material_Layout$subs,
				_user$project$Main$Mdl,
				function (_) {
					return _.mdl;
				}(_p2));
		},
		update: _user$project$Main$update
	})();
